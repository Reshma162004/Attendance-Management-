import cv2
import face_recognition
import os
import numpy as np
import pandas as pd
from datetime import datetime

# Initialize attendance.csv to store attendance data
ATTENDANCE_FILE = 'attendance.csv'
if not os.path.exists(ATTENDANCE_FILE):
    df = pd.DataFrame(columns=['Name', 'Time'])
    df.to_csv(ATTENDANCE_FILE, index=False)

# Load known faces
KNOWN_FACES_DIR = 'known_faces'
os.makedirs(KNOWN_FACES_DIR, exist_ok=True)

known_face_encodings = []
known_face_names = []

# Load images and encode faces
for filename in os.listdir(KNOWN_FACES_DIR):
    if filename.endswith(('.jpg', '.jpeg', '.png')):
        image = face_recognition.load_image_file(f"{KNOWN_FACES_DIR}/{filename}")
        encoding = face_recognition.face_encodings(image)[0]  # Encode the first face found
        known_face_encodings.append(encoding)
        known_face_names.append(os.path.splitext(filename)[0])

# Initialize webcam
video_capture = cv2.VideoCapture(0)

print("Starting the attendance system. Press 'q' to quit.")

while True:
    # Capture a single frame
    ret, frame = video_capture.read()

    # Resize frame for faster processing
    small_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25)
    rgb_small_frame = small_frame[:, :, ::-1]

    # Detect faces and encode them
    face_locations = face_recognition.face_locations(rgb_small_frame)
    face_encodings = face_recognition.face_encodings(rgb_small_frame, face_locations)

    for face_encoding, face_location in zip(face_encodings, face_locations):
        matches = face_recognition.compare_faces(known_face_encodings, face_encoding)
        face_distances = face_recognition.face_distance(known_face_encodings, face_encoding)

        name = "Unknown"
        if True in matches:
            best_match_index = np.argmin(face_distances)
            name = known_face_names[best_match_index]

        # Mark attendance if the face is recognized
        if name != "Unknown":
            now = datetime.now()
            time = now.strftime('%H:%M:%S')

            # Update attendance.csv
            df = pd.read_csv(ATTENDANCE_FILE)
            if name not in df['Name'].values:
                df = df.append({'Name': name, 'Time': time}, ignore_index=True)
                df.to_csv(ATTENDANCE_FILE, index=False)
                print(f"Attendance marked for {name} at {time}")

        # Draw rectangle and label
        top, right, bottom, left = [v * 4 for v in face_location]
        cv2.rectangle(frame, (left, top), (right, bottom), (0, 255, 0), 2)
        cv2.putText(frame, name, (left, top - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 255, 255), 2)

    # Display the video frame
    cv2.imshow('Attendance System', frame)

    # Exit on 'q' key press
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release webcam and close windows
video_capture.release()
cv2.destroyAllWindows()

print("Attendance system stopped.")
